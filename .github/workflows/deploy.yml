#name: Deploy to Lightsail
#
#on:
#  push:
#    branches:
#      - main
#
#jobs:
#  build-and-deploy:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: 📦 Repository Checkout
#        uses: actions/checkout@v3
#
#      - name: 🔧 Set up JDK
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#
#      - name: 🏗️ Build with Gradle
#        run: ./gradlew bootJar
#
#      - name: 📤 Copy JAR to server
#        uses: appleboy/scp-action@v0.1.4
#        with:
#          host: ${{ secrets.LIGHTSAIL_HOST }}
#          username: ${{ secrets.LIGHTSAIL_USER }}
#          key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
#          source: ./build/libs/*.jar
#          target: ~/deploy
#
#      - name: 🚀 Remote Deploy via SSH
#        uses: appleboy/ssh-action@v0.1.10
#        with:
#          host: ${{ secrets.LIGHTSAIL_HOST }}
#          username: ${{ secrets.LIGHTSAIL_USER }}
#          key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
#          script: |
#            cd ~/deploy
#
#            # Dockerfile 생성
#            echo 'FROM openjdk:17-jdk-alpine
#            COPY Michigan-Korean-Community-1.0.jar /app.jar
#            ENTRYPOINT ["java", "-jar", "/app.jar", "--spring.config.location=file:/config/application.yml"]' > Dockerfile
#
#            # Docker 이미지 빌드
#            sudo docker build -t restoflowing-app .
#
#            # 기존 컨테이너 종료 및 삭제
#            sudo docker stop restoflowing-app || true
#            sudo docker rm restoflowing-app || true
#
#            # 새 컨테이너 실행 (config 폴더를 컨테이너 안에 마운트)
#            sudo docker run -d --name restoflowing-app -p 10000:10000 \
#              -v /etc/letsencrypt:/etc/letsencrypt \
#              -v ~/deploy/config:/config \
#              restoflowing-app